STUDENT NAME: SHANTANU MISHRA
STUDENT NSID: SHM572
STUDENT No. : 11255997

Question. 1 (A)

i)***Command*** 
	shm572@tux6:~/lab10> cp datatype_sizes.incomplete.c datatype_sizes.c
	shm572@tux6:~/lab10> vim datatype_sizes.incomplete.c 
	shm572@tux6:~/lab10> gcc -Wall -Wextra datatype_sizes.c
	shm572@tux6:~/lab10> ./a.out   
***Output***                       
	sizeof int32_t is 4
	sizeof uint64_t is 8
	sizeof long int is 8
	sizeof long double is 8
	sizeof pointer-to-void is 8
ii)***Command*** 
	shm572@tux6:~/lab10> diff datatype_sizes.incomplete.c datatype_sizes.c
***Output***
	11,15c11,15
	<   printf( "sizeof int32_t is %zd\n", /* fill in argument */ );
	<   printf( "sizeof uint64_t is %zd\n", /* fill in argument */ );
	<   printf( "sizeof long int is %zd\n", /* fill in argument */ );
	<   printf( "sizeof long double is %zd\n", /* fill in argument */ );
	<   printf( "sizeof pointer-to-void is %zd\n", /* fill in argument */ );
	---
	>   printf( "sizeof int32_t is %zd\n", sizeof(int32_t));
	>   printf( "sizeof uint64_t is %zd\n", sizeof(uint64_t));
	>   printf( "sizeof long int is %zd\n", sizeof( long int ));
	>   printf( "sizeof long double is %zd\n", sizeof( long int ) );
	>   printf( "sizeof pointer-to-void is %zd\n", sizeof( void*));
Question. 1 (B)

i)***Command*** 
	shm572@tux6:~/lab10> gcc -Wall -Wextra -m32 -o 32bit_sizes datatype_sizes.c

ii)***Command*** 
	shm572@tux6:~/lab10> gcc -Wall -Wextra -m64 -o 64bit_sizes datatype_sizes.c

Question. 1 (C)

i)***Command*** 
	shm572@tux6:~/lab10> file 32bit_sizes
***Output***
	32bit_sizes: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 	3.2.0, BuildID[sha1]=d1f545033d12363cf1f900756d12011d3a3384bd, not stripped
ii)***Command*** 
	shm572@tux6:~/lab10> file 64bit_sizes
***Output***
	64bit_sizes: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 	3.2.0, BuildID[sha1]=425ddfe96eb2ddc22d6c68d31df3ce1dd80d69bf, not stripped

iii)  yes it corresponds to the compiler options

Question. 1 (D)

i)***Command*** 
	shm572@tux6:~/lab10> 32bit_sizes 
***Output***
	sizeof int32_t is 4
	sizeof uint64_t is 8
	sizeof long int is 4
	sizeof long double is 4
	sizeof pointer-to-void is 4
ii)***Command***
	shm572@tux6:~/lab10> 64bit_sizes
***Output***
	sizeof int32_t is 4
	sizeof uint64_t is 8
	sizeof long int is 8
	sizeof long double is 8
	sizeof pointer-to-void is 8

iii)   int32_t         always same
       uint64_t        always same
       long int        not always same
       long double     not always same
       pointer-to-void not always same
Question. 1 (E)

i)     Yes, the sizes of datatypes such as int32_t and uint64_t always the same.

Question. 1 (F)

i)***Command*** 
	shm572@tux6:~/lab10>  uname -i    
***Output***
	x86_64


Question. 2 (A)

i)***Command*** 
	shm572@tux6:~/lab10> vim test_math.c
	shm572@tux6:~/lab10> diff  test_math.incomplete.c test_math.c
***Output***
	17c17
	<     printf( "sin(%f) is %f\n", value, /* provide function call */ );
	---
	>     printf( "sin(%f) is %f\n", value, sinf(value));
	19a20
	> 
Question. 2 (B)
i)***Command*** 
	shm572@tux6:~/lab10> gcc -Wall -Wextra test_math.c -lm 
	shm572@tux6:~/lab10> ./a.out 
***output***
	usage: ./a.out <floating-point number>

***testing***
	shm572@tux6:~/lab10> ./a.out 90
	sin(90.000000) is 0.893997
	shm572@tux6:~/lab10> ./a.out 0 
	sin(0.000000) is 0.000000
	shm572@tux6:~/lab10> ./a.out 45
	sin(45.000000) is 0.850904
	shm572@tux6:~/lab10> ./a.out 30
	sin(30.000000) is -0.988032
	shm572@tux6:~/lab10> ./a.out 60
	sin(60.000000) is -0.304811
	shm572@tux6:~/lab10> ./a.out 80
	sin(80.000000) is -0.993889
	shm572@tux6:~/lab10> ./a.out 90
	sin(90.000000) is 0.893997
	shm572@tux6:~/lab10> ./a.out 100
	sin(100.000000) is -0.506366
	shm572@tux6:~/lab10> ./a.out 10 
	sin(10.000000) is -0.544021
	shm572@tux6:~/lab10> ./a.out gyu
	usage: ./a.out <floating-point number>
	shm572@tux6:~/lab10> ./a.out gy11
	usage: ./a.out <floating-point number>
	shm572@tux6:~/lab10> ./a.out 13dw
	sin(13.000000) is 0.420167
	shm572@tux6:~/lab10> ./a.out     
	usage: ./a.out <floating-point number>
	shm572@tux6:~/lab10> ./a.out 111111111111111
	sin(111111114326016.000000) is 0.820153

Question. 3 (A)
i)***Command*** 
	shm572@tux6:~/lab10> gcc -Wall -Wextra -c q3_calc.c

Question. 3 (B)
i)***Command***
	shm572@tux6:~/lab10> cp q3_main.incomplete.c q3_main.c
	shm572@tux6:~/lab10> vim q3_main.c
	shm572@tux6:~/lab10> diff q3_main.incomplete.c q3_main.c
***Output***
	10c10
	< // place the fix here
	---
	> #include "q3_calc.h"

Question. 3 (C)
i)***Command***
	shm572@tux6:~/lab10> gcc -Wall -Wextra -c q3_main.c
Question. 3 (D)
i)***Command***
	shm572@tux6:~/lab10> gcc -o q3 q3_calc.o  q3_main.o
	shm572@tux6:~/lab10> q3
***Output***
	Performing the following calculations on 5.000000 and 6.000000
	addition:  11.000000
	subtraction: -1.000000  
	Multiplication: 30.000000
	Power: 15625.000000

Question. 4 
***Command***
	shm572@tux6:~/lab10> info make

>>>lists of possible values .FEATURES
     'archives'
          Supports 'ar' (archive) files using special file name syntax.
          *Note Using 'make' to Update Archive Files: Archives.

     'check-symlink'
          Supports the '-L' ('--check-symlink-times') flag.  *Note
          Summary of Options: Options Summary.

     'else-if'
          Supports "else if" non-nested conditionals.  *Note Syntax of
          Conditionals: Conditional Syntax.

     'jobserver'
          Supports "job server" enhanced parallel builds.  *Note
          Parallel Execution: Parallel.

     'oneshell'
          Supports the '.ONESHELL' special target.  *Note Using One
          Shell: One Shell.

     'order-only'
          Supports order-only prerequisites.  *Note Types of
          Prerequisites: Prerequisite Types.

     'second-expansion'
          Supports secondary expansion of prerequisite lists.

     'shortest-stem'
          Uses the "shortest stem" method of choosing which pattern, of
          multiple applicable options, will be used.  *Note How Patterns
          Match: Pattern Match.

     'target-specific'
          Supports target-specific and pattern-specific variable
          assignments.  *Note Target-specific Variable Values:
          Target-specific.

     'undefine'
          Supports the 'undefine' directive.  *Note Undefine
          Directive::.

     'guile'
          Has GNU Guile available as an embedded extension language.
          *Note GNU Guile Integration: Guile Integration.

     'load'
          Supports dynamically loadable objects for creating custom
          extensions.  *Note Loading Dynamic Objects: Loading Objects.
Question. 5 (A)
i)***Command***
	shm572@tux6:~/lab10> file q3
***Output***
	q3: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, 		BuildID[sha1]=82b5b49044d18e0a901cfc0004877108ad1d65c4, not stripped
ii)***Command***
	shm572@tux6:~/lab10> ls -l -h q3
***Output***
	-rwxr-x--- 1 shm572 student 8.3K Nov 25 12:43 q3*
Question. 5 (B)
***Command***
	shm572@tux6:~/lab10> gcc -static q3_calc.o  q3_main.o -o q3_static
Question. 5 (C)
i)***Command***
	shm572@tux6:~/lab10> file q3_static 
**Output***
	q3_static: ELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), statically linked, for GNU/Linux 3.2.0, 			    BuildID[sha1]=6f7df83a6fdad325d133d05e14a73e53fee4a1ed, not stripped
ii)***Command***
	shm572@tux6:~/lab10> ls -l -h q3_static 
**Output***
	-rwxr-x--- 1 shm572 student 740K Nov 25 13:31 q3_static*




